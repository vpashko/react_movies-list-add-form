{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","initialFieldsOfMovie","NewMovie","onAdd","count","setCount","fieldsOfMovie","setFieldsOfMovie","isDisabled","trim","onSubmit","preventDefault","newMovie","prevValue","newTitle","newDescription","newImgUrl","newImdbUrl","newImdbId","disabled","App","React","moviesFromServer","moviesList","setMoviesList","previousList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdb5153c.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={`${name}`}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\nconst initialFieldsOfMovie: Movie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [fieldsOfMovie, setFieldsOfMovie] = useState(initialFieldsOfMovie);\n\n  const isDisabled = !(\n    fieldsOfMovie.title.trim()\n    && fieldsOfMovie.imgUrl.trim()\n    && fieldsOfMovie.imdbUrl.trim()\n    && fieldsOfMovie.imdbId.trim());\n\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newMovie: Movie = {\n      title: fieldsOfMovie.title,\n      description: fieldsOfMovie.description,\n      imgUrl: fieldsOfMovie.imgUrl,\n      imdbUrl: fieldsOfMovie.imdbUrl,\n      imdbId: fieldsOfMovie.imdbId,\n    };\n\n    onAdd(newMovie);\n\n    setCount((prevValue) => prevValue + 1);\n    setFieldsOfMovie(initialFieldsOfMovie);\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={submitHandler}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={fieldsOfMovie.title}\n        onChange={(newTitle) => setFieldsOfMovie({\n          ...fieldsOfMovie,\n          title: newTitle,\n        })}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={fieldsOfMovie.description}\n        onChange={(newDescription) => setFieldsOfMovie({\n          ...fieldsOfMovie,\n          description: newDescription,\n        })}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={fieldsOfMovie.imgUrl}\n        onChange={(newImgUrl) => setFieldsOfMovie({\n          ...fieldsOfMovie,\n          imgUrl: newImgUrl,\n        })}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={fieldsOfMovie.imdbUrl}\n        onChange={(newImdbUrl) => setFieldsOfMovie({\n          ...fieldsOfMovie,\n          imdbUrl: newImdbUrl,\n        })}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={fieldsOfMovie.imdbId}\n        onChange={(newImdbId) => setFieldsOfMovie({\n          ...fieldsOfMovie,\n          imdbId: newImdbId,\n        })}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [moviesList, setMoviesList] = React.useState<Movie[]>(moviesFromServer);\n\n  const addNewMovie = (newMovie: Movie) => {\n    setMoviesList(previousList => [...previousList, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}